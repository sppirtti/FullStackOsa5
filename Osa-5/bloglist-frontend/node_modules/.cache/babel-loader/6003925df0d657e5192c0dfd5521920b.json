{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samuli\\\\FullStack\\\\Osa-5\\\\bloglist-frontend\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Blog from './components/Blog';\nimport blogService from './services/blogs';\nimport loginService from './services/login';\nimport Notification from './components/Notification';\nimport BlogForm from './components/BlogForm';\nimport './App.css';\nimport Message from './components/Message';\nimport Togglable from './components/Togglable';\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const noteFormRef = React.createRef();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState(null);\n  const [message, setMessage] = useState(null);\n  useEffect(() => {\n    blogService.getAll().then(blogs => setBlogs(blogs));\n  }, []);\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser');\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      blogService.setToken(user.token);\n    }\n  }, []);\n\n  const handleLogout = async () => {\n    window.localStorage.removeItem('loggedBlogappUser');\n  };\n\n  const logoutForm = () => React.createElement(\"form\", {\n    onSubmit: handleLogout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"logout\"));\n\n  const addBlog = blogObject => {\n    noteFormRef.current.toggleVisibility();\n    blogService.create(blogObject).then(returnedBlog => {\n      setBlogs(blogs.concat(returnedBlog));\n    });\n    setMessage('a new blog added');\n    setTimeout(() => {\n      setMessage(null);\n    }, 5000);\n    /*  setNewAuthor('')\r\n      setNewTitle('')\r\n      setNewUrl('')*/\n  };\n\n  const handleLogin = async event => {\n    event.preventDefault();\n\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n      window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user));\n      blogService.setToken(user.token);\n      setUser(user);\n      setUsername('');\n      setPassword('');\n    } catch (exception) {\n      setErrorMessage('wrong credentials');\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n    }\n  };\n\n  const blogForm = () => React.createElement(Togglable, {\n    buttonLabel: \"new note\",\n    ref: noteFormRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(BlogForm, {\n    createBlog: addBlog,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }));\n  /*const blogForm = () => (\r\n    <Togglable buttonLabel='create'>\r\n      <BlogForm addBlog={addBlog} newAuthor={newAuthor} newTitle={newTitle} newUrl={newUrl} handleAuthorChange={handleAuthorChange}\r\n        handleTitleChange={handleTitleChange} handleUrlChange={handleUrlChange} />\r\n    </Togglable>\r\n  )*/\n\n\n  const loginForm = () => React.createElement(\"form\", {\n    onSubmit: handleLogin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"username\", React.createElement(\"input\", {\n    type: \"text\",\n    value: username,\n    name: \"Username\",\n    onChange: ({\n      target\n    }) => setUsername(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"password\", React.createElement(\"input\", {\n    type: \"password\",\n    value: password,\n    name: \"Password\",\n    onChange: ({\n      target\n    }) => setPassword(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"login\"));\n\n  const removeBlog = async blog => {\n    if (window.confirm(`Remove blog \"${blog.title}\" by ${blog.author}?`)) {\n      try {\n        await blogService.remove(blog.id);\n        setBlogs(blogs.filter(b => b.id !== blog.id));\n      } catch (exception) {}\n    }\n  };\n\n  if (user === null) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(Notification, {\n      message: errorMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Log in to application\"), loginForm());\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, \"blogs\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, user.name, \" logged in \", logoutForm()), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(Message, {\n    message: message,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }), blogForm()), blogs.sort((a, b) => b.likes - a.likes).map(blog => React.createElement(Blog, {\n    key: blog.id,\n    blog: blog,\n    removeBlog: () => removeBlog(blog),\n    user: user,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Samuli/FullStack/Osa-5/bloglist-frontend/src/App.js"],"names":["React","useState","useEffect","Blog","blogService","loginService","Notification","BlogForm","Message","Togglable","App","blogs","setBlogs","errorMessage","setErrorMessage","noteFormRef","createRef","username","setUsername","password","setPassword","user","setUser","message","setMessage","getAll","then","loggedUserJSON","window","localStorage","getItem","JSON","parse","setToken","token","handleLogout","removeItem","logoutForm","addBlog","blogObject","current","toggleVisibility","create","returnedBlog","concat","setTimeout","handleLogin","event","preventDefault","login","setItem","stringify","exception","blogForm","loginForm","target","value","removeBlog","blog","confirm","title","author","remove","id","filter","b","name","sort","a","likes","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport Blog from './components/Blog'\r\nimport blogService from './services/blogs'\r\nimport loginService from './services/login'\r\nimport Notification from './components/Notification'\r\nimport BlogForm from './components/BlogForm'\r\nimport './App.css'\r\nimport Message from './components/Message'\r\n\r\nimport Togglable from './components/Togglable'\r\n\r\nconst App = () => {\r\n  const [blogs, setBlogs] = useState([])\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const noteFormRef = React.createRef()\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [user, setUser] = useState(null)\r\n  const [message, setMessage] = useState(null)\r\n\r\n  useEffect(() => {\r\n    blogService.getAll().then(blogs =>\r\n      setBlogs(blogs)\r\n    )\r\n  }, [])\r\n\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      setUser(user)\r\n      blogService.setToken(user.token)\r\n    }\r\n  }, [])\r\n\r\n  const handleLogout = async () => {\r\n    window.localStorage.removeItem('loggedBlogappUser')\r\n  }\r\n\r\n  const logoutForm = () => (\r\n    <form onSubmit={handleLogout}>\r\n      <button type=\"submit\">logout</button>\r\n    </form>\r\n  )\r\n  \r\n\r\n  const addBlog = (blogObject) => {\r\n    noteFormRef.current.toggleVisibility()\r\n\r\n    blogService\r\n      .create(blogObject)\r\n      .then(returnedBlog => {\r\n        setBlogs(blogs.concat(returnedBlog))\r\n      })\r\n      setMessage('a new blog added')\r\n        setTimeout(() => {\r\n            setMessage(null)\r\n        }, 5000)\r\n\r\n  /*  setNewAuthor('')\r\n    setNewTitle('')\r\n    setNewUrl('')*/\r\n    \r\n  }\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      const user = await loginService.login({\r\n        username, password,\r\n      })\r\n      window.localStorage.setItem(\r\n        'loggedBlogappUser', JSON.stringify(user)\r\n      )\r\n      blogService.setToken(user.token)\r\n      setUser(user)\r\n      setUsername('')\r\n      setPassword('')\r\n    } catch (exception) {\r\n      setErrorMessage('wrong credentials')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const blogForm = () => (\r\n    <Togglable buttonLabel='new note' ref={noteFormRef}>\r\n      <BlogForm createBlog={addBlog} />\r\n    </Togglable>\r\n  )\r\n\r\n\r\n  /*const blogForm = () => (\r\n    <Togglable buttonLabel='create'>\r\n      <BlogForm addBlog={addBlog} newAuthor={newAuthor} newTitle={newTitle} newUrl={newUrl} handleAuthorChange={handleAuthorChange}\r\n        handleTitleChange={handleTitleChange} handleUrlChange={handleUrlChange} />\r\n    </Togglable>\r\n  )*/\r\n \r\n\r\n  const loginForm = () => (\r\n    <form onSubmit={handleLogin}>\r\n      <div>\r\n        username\r\n          <input\r\n          type=\"text\"\r\n          value={username}\r\n          name=\"Username\"\r\n          onChange={({ target }) => setUsername(target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        password\r\n          <input\r\n          type=\"password\"\r\n          value={password}\r\n          name=\"Password\"\r\n          onChange={({ target }) => setPassword(target.value)}\r\n        />\r\n      </div>\r\n      <button type=\"submit\">login</button>\r\n    </form>\r\n  )\r\n\r\n\r\nconst removeBlog = async (blog) => {\r\n    if (window.confirm(`Remove blog \"${blog.title}\" by ${blog.author}?`)) {\r\n        try {\r\n            await blogService.remove(blog.id)\r\n            setBlogs(blogs.filter(b => b.id !== blog.id))\r\n           \r\n        } catch (exception) {\r\n            \r\n        }\r\n    }\r\n}\r\n\r\n\r\n  if (user === null) {\r\n    return (\r\n      <div>\r\n        <Notification message={errorMessage} />\r\n        <h2>Log in to application</h2>\r\n        {loginForm()}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>blogs</h2>\r\n      \r\n      <div>{user.name} logged in {logoutForm()}</div>\r\n      <div>\r\n      <Message message={message} />\r\n        {blogForm()}\r\n      </div>\r\n      {blogs.sort((a, b) => b.likes - a.likes).map(blog =>\r\n        <Blog key={blog.id} blog={blog}  removeBlog={() => removeBlog(blog)} user={user} />)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App"]},"metadata":{},"sourceType":"module"}